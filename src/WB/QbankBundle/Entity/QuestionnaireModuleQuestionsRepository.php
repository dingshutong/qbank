<?php

namespace WB\QbankBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * QuestionnaireModuleQuestionsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionnaireModuleQuestionsRepository extends EntityRepository
{
    public function getQuestionClassificationCodes($questionId, $classificationId, $all = false)
    {
        $query = $this->getEntityManager()
            ->createQueryBuilder();

        $query
            ->select('c, q')
            ->from('WBQbankBundle:ClassificationCodes', 'c')
            ->orderBy('c.weight', 'ASC')
            ->leftJoin('c.questionsRelClassifications', 'q', 'WITH', 'q.questionId = :questionId')
            ->where("c.classificationId = :classificationId")
            ->setParameter('classificationId', $classificationId)
            ->setParameter('questionId', $questionId);

        if(!$all){
            $query->andWhere("q.skipValue IS NULL");
        }

        $q = $query->getQuery();
        return $q->getResult();

    }
    
    
    //removes multiple questions
    //@questions array()
    public function batchRemoveQuestions($quest_module_id,$questions)
    {
        $isDeleted = $this->createQueryBuilder("QuestionnaireModulesQuestions")
            ->delete()
            ->where('QuestionnaireModulesQuestions.id NOT IN (:id)')->setParameter("id", $questions)
            ->andWhere('QuestionnaireModulesQuestions.questModuleId = :quest_module_id')->setParameter("quest_module_id", $quest_module_id)
            ->getQuery()->execute();

        return $isDeleted;
    }
    
    
    
    //remove references to classifications from questions by classification id
    public function batchRemoveQuestionClassifications($classification_id)
    {
        $qb = $this->createQueryBuilder("QuestionnaireModulesQuestions");
        $qb->update('WBQbankBundle:QuestionnaireModuleQuestions', 'q');
        $qb->set('q.classificationId',':new_value');
        $qb->setParameter('new_value',null);
        $qb->set('q.visualRepFormat',$qb->expr()->literal(1));
        $qb->set('q.valRepFormat',$qb->expr()->literal(0));
        $qb->where("q.classificationId =:classification_id");
        $qb->setParameter('classification_id', $classification_id);
        
        //echo $qb->getQuery()->getSql();

        $qb->getQuery()->execute();     
        return $qb;
    }
}
